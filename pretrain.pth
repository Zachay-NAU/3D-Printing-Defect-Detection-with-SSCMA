import torch
from torchvision.models.detection import fasterrcnn_resnet50_fpn_v2
from torchvision.models.detection.faster_rcnn import FastRCNNPredictor

def get_model_instance_segmentation(num_classes):
    model = fasterrcnn_resnet50_fpn_v2(weights='COCO_V1')
    in_features = model.roi_heads.box_predictor.cls_score.in_features
    model.roi_heads.box_predictor = FastRCNNPredictor(in_features, num_classes)
    return model

num_classes = 2  # 1 背景 + 1 缺陷
model = get_model_instance_segmentation(num_classes)

# 加载训练好的模型权重
model.load_state_dict(torch.load('3d_printing_defect_detection.pth'))

# 设置模型为评估模式
model.eval()

# 现在可以使用模型进行推理或继续训练
